=pod

=head1 NAME

HTML::Template::Compiled::Reference

=head1 TAGSTYLES

    <TMPL_IF var><TMPL_VAR foo></tmpl_if var>
    <!-- TMPL_IF var --><!-- TMPL_VAR foo --><!-- /tmpl_if var -->
    <%if var %><%= foo %><%/if var %>

Optional tagstyle 'tt':

    [%if var %][%= foo %][%/if var %]

=head1 TAGS

=over 4

=item VAR

    <%var foo%> or <%= foo%>

=item IF, IF_DEFINED, UNLESS, ELSIF, ELSE

conditions like in Perl

=item LOOP, WHILE, EACH

for-loop and while-loop like in Perl.

    <%loop cds%><%= __count__%>. Title: <%= _.title%><%/loop cds%>
    <%loop cds join=", " %><%= _.title%><%/loop cds%>
    <%while resultset.next%><%= __count__%>. <%= _.foo %><%/while %>
    <%each hashref%><%= __key__ %>=<%= __value__ %><%/each %>

=item WITH

    <%with cds[0].artist.fanclub%><%= _.address%><%= _.homepage%><%/with %>

=item INCLUDE, INCLUDE_VAR

    <%include template.htc%>
    <%include_var param_with_template_name%>

=item COMMENT, VERBATIM, NOPARSE

    <%comment explanation %>
    This will not appear in the rendered template.
    blah blah...
    <%/comment explanation %>

=item SWITCH, CASE

    <%switch .config.language%>
    <%case de%>Hallo
    <%case es%>Hola
    <%case en,default%>Hello
    <%/switch .config.language%>

=item PERL

See section Perl in L<HTML::Template::Compiled>

=back

=head1 ATTRIBUTES

Each attribute can be written as

    attribute=foo
    attribute="some thing"
    attribute='some "thing"'

=over 4

=item NAME

You can omit the C<'name='> here.

    <%if var%>var<%elsif name=var2%>var4<%/if%>

Can be used in all tags.

=item ESCAPE

    <%= message escape=html %>
    <%= params escape=url %>
    <%= params escape=js %>
    <%= some_var escape=dump|html%>

Can be used in C<VAR>-tags.

=item DEFAULT

    <%= this.var.might_be_undef default="my fault" %>

Can be used in C<VAR>-tags.

=item ALIAS

    <%loop cds alias="cd" %><%= cd.title %><%/loop cds %>

Can be used in C<LOOP> and C<WHILE>

=item JOIN

    <%loop cds join=", " %><%= _.title%><%/loop cds%>

can be used in C<LOOP>

=item BREAK

    <%loop cds break="3" %>
    <%= _.title%><%if __break__ %>\n</%if %>
    <%/loop cds%>

Sets C<__break__> to 1 every xth loop.
Can be used in C<LOOP>, C<WHILE> and C<EACH>

=back

=cut

